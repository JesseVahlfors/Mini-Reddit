# Checklist

## Components

- [ ] **Global Component toDos**
  - [ ] Add message to alert user of Api limit 
  - [ ] Add a method to render previous state if Api limit exceeded
  - [ ] Render initial view of the app when first visiting (/Pics?)

- [ ] **Header Component**
  - [ ] Initialize the header
  - [x] Implement logo
  - [x] Create Searchbar
    - [ ] implement search function to filter posts 
  - [ ] Add navigation button to select subreddits for small screens 

- [ ] **Subreddit navigation Component**
  - [ ] Create the component
    - [ ] Display heading
    - [ ] Display subreddit container
      - [ ] Display Subreddit icon
      - [ ] Display Subreddit title
  - [ ] Add navigation button to select subreddits for small screens
  - [ ] Fetch and iterate subreddits to list them in order of popularity

- [ ] **Articles Component**
  - [x] *Create Articles component*
    - [x] Iterate the store state object to render posts
  - [x] *Create Article component*
    - [x] Display Title
    - [ ] Display Image or text paragraph
    - [x] Display Post Author
    - [ ] Display Score, up and down vote arrow buttons
      - [ ] Create button functions
    - [x] Display Time of the post
    - [ ] create button to display comments go straight to detailed view with commennts open
    - [ ] the article container should display title and image. if no image present it should display
        paragraph text restricted to 6 rows.
  - [ ] *Create DetailedArticle*
    - [ ] Clicking the article container opens a detailed view with the paragraph text.
    - [ ] Display Text paragraph
    - [ ] Display Title
    - [ ] Display Image if available
    - [ ] Display Post Author
    - [ ] Display Score, up and down vote arrow buttons
      - [ ] Create button functions
    - [ ] Display Time of the post
    - [ ] create button to display comments
  

- [ ] **Comments Component**
  - [x] Create Comments component
    - [x] Display Text paragraph
    - [x] Display Post Author
    - [x] Display Score, up and down vote arrow buttons
        - [ ] Create button functions
    - [x] Display Time of the post
  - [x] Sort comments by score  
  - [ ] Style the comments section
- [ ] *Comments Component extras*
  - [ ] Make a selector to sort comments for newest and oldest posts

## Utilities

- [x] **Time Utilities**
  - [x] Create function to format time difference
  - [x] Implement function to format date

## Redux
- [x] **Store**
  - [x] Initialize the store
  - [x] Add ArticlesSlice to store
  - [x] Add CommentsSlice to store

- [ ] **Articles Slice**
  - [x] Define Redux slice for articles
  - [x] Create mockApi state with redditAPI structure as the initialState for building components
  - [ ] Add actions for fetching and updating articles
  - [x] Create selectors for accessing articles state


- [ ] **Comments Slice**
  - [x] Define Redux slice for comments
  - [x] Create mockApi state with redditAPI structure as the initialState for building components
  - [ ] Add actions for fetching and updating comments
  - [x] Create selectors for accessing comments state

- [ ] **Subreddits Slice**
  - [ ] Define Redux slice for subreddits

## Styling

- [ ] **Global Styles**
  - [x] Set initial styling differentiate components on page
  - [ ] Define global styles using a styling library (e.g., styled-components)
  - [ ] Light/Dark mode
- [ ] **Responsive Styles**
  - [ ] Mouse hovering animation to articles, comments and subreddits
  - [ ] Make components render well in most display sizes
  - [ ] Hide subreddits to a navigation button for small screen sizes
- [ ] **Component-specific Styles**
  - [ ] Apply styles to individual components
  - [ ] Loading animation for loading posts and comments



## Testing

- [ ] **Unit Tests**
  - [ ] Write unit tests for critical functions
  - [ ] Ensure Redux actions and reducers are tested

- [ ] **Component Tests**
  - [ ] Implement tests for rendering components
  - [ ] Test component interactions and state changes

## Documentation

- [ ] **Readme**
  - [ ] Update project Readme with usage instructions
  - [ ] Include information on available components and utilities

## Optionals
- [ ] Get a custom domain name and use it for your application

- [ ] Set up a CI/CD workflow to automatically deploy your application when the master branch in the repository changes

- [ ] Make your application a progressive web app